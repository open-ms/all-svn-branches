# CMake installation file
# Created 2008/10 during OpenMS
# retreat by CB && AB
#
#
#

PROJECT("OpenMS")
cmake_minimum_required(VERSION 2.6)

AUX_SOURCE_DIRECTORY(source/ANALYSIS ANALYSIS_SOURCES)
AUX_SOURCE_DIRECTORY(source/APPLICATIONS APPLICATIONS_SOURCES)
AUX_SOURCE_DIRECTORY(source/CHEMISTRY CHEMISTRY_SOURCES)
AUX_SOURCE_DIRECTORY(source/COMPARISON COMPARISON_SOURCES)
AUX_SOURCE_DIRECTORY(source/CONCEPT CONCEPT_SOURCES)
AUX_SOURCE_DIRECTORY(source/DATASTRUCTURES DATASTRUCTURES_SOURCES)
AUX_SOURCE_DIRECTORY(source/FILTERING FILTERING_SOURCES)
AUX_SOURCE_DIRECTORY(source/FORMAT FORMAT_SOURCES)
AUX_SOURCE_DIRECTORY(source/KERNEL KERNEL_SOURCES)
AUX_SOURCE_DIRECTORY(source/MATH MATH_SOURCES)
AUX_SOURCE_DIRECTORY(source/METADATA METADATA_SOURCES)
AUX_SOURCE_DIRECTORY(source/SYSTEM SYSTEM_SOURCES)
AUX_SOURCE_DIRECTORY(source/TRANSFORMATIONS TRANSFORMATIONS_SOURCES)
AUX_SOURCE_DIRECTORY(source/VISUAL/DIALOGS VISUAL_SOURCES)

INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/include/)

INCLUDE(TestBigEndian)
TEST_BIG_ENDIAN(OPENMS_HAS_BIG_ENDIAN)
ADD_DEFINITIONS("-Wall -ansi -pedantic -Wno-long-long -Wno-non-virtual-dtor -M")

FIND_PACKAGE(Qt4 REQUIRED)
SET(QT_USE_QTXML 1)

# bla add others, only QtCore and QtGui are enabled by default
INCLUDE(${QT_USE_FILE})

INCLUDE(UseQt4)



#### bla
MACRO (QT4_WRAP_UI_OWN outfiles dest_dir)
    QT4_EXTRACT_OPTIONS(ui_files ui_options ${ARGN})
    FOREACH (it ${ui_files}) 
      GET_FILENAME_COMPONENT(outfile ${it} NAME_WE)
      GET_FILENAME_COMPONENT(infile ${it} ABSOLUTE)
      SET(outfile ${dest_dir}/${outfile}Template.h)
			#message(${QT_UIC_EXECUTABLE})
			message("Generating uic header of file: " ${outfile})
			execute_process(COMMAND ${QT_UIC_EXECUTABLE} ${ui_options} -o ${outfile} ${infile})
      SET(${outfiles} ${${outfiles}} ${outfile})
    ENDFOREACH (it)
ENDMACRO (QT4_WRAP_UI_OWN)

ADD_SUBDIRECTORY(source/VISUAL)
ADD_SUBDIRECTORY(source/VISUAL/DIALOGS)


set(CONTRIB_INCLUDE_DIR ${PROJECT_SOURCE_DIR}/contrib/)
set(CONTRIB_LIB_DIR ${PROJECT_SOURCE_DIR}/contrib/)

# TODO check whether this is necessary
FIND_PATH(GSL_INCLUDE_DIR
    NAMES gsl/gsl_cdf.h gsl/gsl_randist.h
    PATHS ${CONTRIB_INCLUDE_DIR}
    PATH_SUFFIXES include
    DOC "GSL header include dir"
    )
MESSAGE(STATUS "Found gsl headers at: " ${GSL_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${GSL_INCLUDE_DIR})

# TODO check whether this is necessary
FIND_LIBRARY(GSL_GSL_LIBRARY
    NAMES gsl libgsl
    PATHS  ${CONTRIB_LIB_DIR}
    PATH_SUFFIXES lib
    DOC "GSL library dir" 
		)
MESSAGE(STATUS "Found gsl library at: " ${GSL_GSL_LIBRARY})

ADD_LIBRARY(OpenMS SHARED 
						${ANALYSIS_SOURCES} 
						${APPLICATIONS_SOURCES}
						{CHEMISTRY_SOURCES}
						${COMPARISON_SOURCES}
						${CONCEPT_SOURCES}
						${DATASTRUCTURES_SOURCES}
						${FILTERING_SOURCES}
						${FORMAT_SOURCES}
						${KERNEL_SOURCES}
						${MATH_SOURCES}
						${METADATA_SOURCES}
						${SYSTEM_SOURCES}
						${TRANSFORMATIONS_SOURCES}
						${VISUAL_DIALOGS_UI_SOURCES}
						${VISUAL_SOURCES}
						)


#### TODO test 32/64bit version
#if (UNIX AND NOT WIN32)
#  if (CMAKE_SIZEOF_VOID_P MATCHES "8")
#    ow_check_cxx_compiler_flag("-fPIC" WITH_FPIC)
#      if (WITH_FPIC)
#        add_definitions(-fPIC)
#    endif (WITH_FPIC)
#  endif (CMAKE_SIZEOF_VOID_P MATCHES "8")
#endif (UNIX AND NOT WIN32)
