# -*- Mode: makefile; tab-width: 2; -*-
# vi: set ts=2:
#
# ==========================================================================
#
# This is Makefile.in / Makefile
# Please do ONLY change Makefile.in,
# as Makefile is automagically
# created by configure from Makefile.in
#
# ==========================================================================
#
# --------------------------------------------------------------------------
#                   OpenMS Mass Spectrometry Framework
# --------------------------------------------------------------------------
#  Copyright (C) 2003-2007 -- Oliver Kohlbacher, Knut Reinert
#
#  This library is free software; you can redistribute it and/or
#  modify it under the terms of the GNU Lesser General Public
#  License as published by the Free Software Foundation; either
#  version 2.1 of the License, or (at your option) any later version.
#
#  This library is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#  Lesser General Public License for more details.
#
#  You should have received a copy of the GNU Lesser General Public
#  License along with this library; if not, write to the Free Software
#  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
# --------------------------------------------------------------------------
# $Maintainer: Marc Sturm $
# --------------------------------------------------------------------------

include config.mak

# 	library version number
LIB_VERSION	= @PACKAGE_VERSION@

#	default library name
LIBNAME = libOpenMS
GUILIBNAME = libOpenMS_GUI

# names of the static libraries
STATIC_LIBS	= libOpenMS.a @GUI_STATIC_LIB@

#	names of the shared libraries
SHARED_LIBS	= $(STATIC_LIBS:.a=.@SHARED_LIB_SUFFIX@)

# names of the library object file lists
OBJECT_LISTS = $(STATIC_LIBS:.a=.objects)

.SUFFIXES:	.objects .a	.@SHARED_LIB_SUFFIX@

.PHONY: dummy

default:	lib

sharedlibs: $(SHARED_LIBS)

staticlibs: $(STATIC_LIBS)

install:	install.shared

clean:
	@$(ECHO) "Cleaning up object files, cores,  and (uninstalled) library files..."
	@$(MAKE) subdirs SUBDIRS="$(DIRS) $(GUI_DIRS) TEST BENCHMARKS EXAMPLES" TARGET=default_clean
	@-$(RM) -f  $(STATIC_LIBS) $(SHARED_LIBS)
	@-$(RM) -rf core.* .Dependencies *.objects *~ @TEMPLATE_DIR@
	@cd $(OPENMS_PATH)/source/APPLICATIONS && make -f Makefile_SUBDIRS default_clean
	@cd $(OPENMS_PATH)/source/TEST/TOPP/ && make clean
	@${RM} -f $(OPENMS_PATH)/source/TEST/*.output

distclean:	clean
	@-$(RM) -rf conf.diag.tar autom4te* config.lic config.log config.status config.mak config_defs.mak common.mak ../include/OpenMS/config.h Makefile ../doc/html/ config.h ../bin

libclean:
	@$(ECHO) "Removing all installed libraries..."
	@-$(RM) -rf ../lib


libOpenMS.objects:
	@$(ECHO)
	@$(ECHO) "Collecting object files for libraries..."
	@-rm -f libOpenMS.objects
	@$(MAKE) subdirs SUBDIRS="$(DIRS)" TARGET=collectlib LIBNAME=$(LIBNAME)

libOpenMS_GUI.objects:
	@$(ECHO)
	@$(ECHO) "Collecting object files for libraries..."
	@-rm -f libOpenMS_GUI.objects
	@$(MAKE) subdirs SUBDIRS="$(GUI_DIRS)" TARGET=collectlib LIBNAME=$(GUILIBNAME)

collect:	$(OBJECT_LISTS)

recollect:
	rm -f $(OBJECT_LISTS)
	@$(MAKE) collect

libOpenMS.@SHARED_LIB_SUFFIX@:	collect
	@$(ECHO)
	@$(ECHO) "Linking shared library:  OpenMS"
	$(DYNAR) $(DYNAROPTS) $(LIBNAME).@SHARED_LIB_SUFFIX@ `cat $(LIBNAME).objects` -lm

libOpenMS_GUI.@SHARED_LIB_SUFFIX@:	collect
	@$(ECHO)
	@$(ECHO) "Linking shared library:  OpenMS_GUI"
	$(DYNAR) $(DYNAROPTS) $(GUILIBNAME).@SHARED_LIB_SUFFIX@ `cat $(GUILIBNAME).objects` -lm

.objects.a:	
	@$(ECHO)
	@$(ECHO) "Linking static library:  $@"
	$(AR) $(AROPTS) $*.a `cat $*.objects`

lib:	.Dependencies dirs collect $(SHARED_LIBS)
	@$(ECHO) " "
	@$(ECHO) "You may now install the libraries with the command"
	@$(ECHO) " "
	@$(ECHO) "   make install"
	@$(ECHO) " "
	@$(ECHO) "After you ran make install, please verify the validity"
	@$(ECHO) "of the installed library by executing"
	@$(ECHO) " "
	@$(ECHO) "   make test"
	@$(ECHO) " "
	@$(ECHO) "This will compile and run an extensive test suite."
	@$(ECHO) " "
	@$(ECHO) "If you use the shared libraries, don't forget to add the path"
	@$(ECHO) " "
	@$(ECHO) "   $(OPENMS_PATH)/lib/$(BINFMT) "
	@$(ECHO) " "
	@$(ECHO) "to your LD_LIBRARY_PATH. "
	@$(ECHO) "@ADDITIONAL_COMMENTS@"

install.static:	
	@$(ECHO) Installing static libraries under $(OPENMS_PATH)/lib/$(BINFMT)...
	@-mkdir $(OPENMS_PATH)/lib 2>/dev/null | cat >/dev/null
	@-mkdir $(OPENMS_PATH)/lib/$(BINFMT) 2>/dev/null | cat >/dev/null
	@-mkdir $(OPENMS_PATH)/bin 2>/dev/null | cat >/dev/null    
	@$(MV) -f $(STATIC_LIBS) $(OPENMS_PATH)/lib/$(BINFMT)

install.shared:	
	@$(ECHO) Installing shared libraries under $(OPENMS_PATH)/lib/$(BINFMT)...
	@-mkdir $(OPENMS_PATH)/lib 2>/dev/null | cat >/dev/null 
	@-mkdir $(OPENMS_PATH)/lib/$(BINFMT) 2>/dev/null | cat >/dev/null
	@-mkdir $(OPENMS_PATH)/bin 2>/dev/null | cat >/dev/null    
	@$(MV) -f $(SHARED_LIBS) $(OPENMS_PATH)/lib/$(BINFMT)

delete.static:	
	@$(ECHO) Deleting static libraries under $(OPENMS_PATH)/lib/$(BINFMT)...
	@set -e; for i in $(STATIC_LIBS) ; do $(RM) $(OPENMS_PATH)/lib/$(BINFMT)/$$i 2>/dev/null ; done

delete.shared:	
	@$(ECHO) Deleting shared libraries under $(OPENMS_PATH)/lib/$(BINFMT)...
	@set -e; for i in $(SHARED_LIBS) ; do $(RM) $(OPENMS_PATH)/lib/$(BINFMT)/$$i 2>/dev/null ; done

.Dependencies:
	@$(MAKE) depend

depend:
	@$(ECHO) "Creating dependencies..."
	@$(ECHO) "" >.Dependencies
	@for i in $(DIRS) $(GUI_DIRS) TEST BENCHMARKS EXAMPLES ; do ( cd $$i; echo "" >.Dependencies; cd .. ) ; done
	@set -e; for i in $(DIRS) $(GUI_DIRS) TEST BENCHMARKS EXAMPLES ; do ( cd $$i; $(MAKE) depend; cd .. ) ; done
	@cd APPLICATIONS && make -f Makefile_SUBDIRS depend

dirs:		dummy
	@$(MAKE) subdirs SUBDIRS="$(DIRS) $(GUI_DIRS)" TARGET=default

subdirs:	dummy
	@set -e; for i in $(SUBDIRS) ; do cd $$i; if $(MAKE) $(TARGET); then cd .. ; else cd .. ; exit 1 ; fi ; done


test:	dummy
	@cd TEST ; $(MAKE) test

bench:	dummy
	@cd BENCHMARKS ; $(MAKE) bench

# build TOPP tools
TOPP:
	@cd APPLICATIONS/TOPP/ && make
	@cd $(OPENMS_PATH)/source/

# test TOPP tools
TOPPtest:
	@cd TEST/TOPP/ && make
	@cd $(OPENMS_PATH)/source/

#
#    special targets - internal use only! 
#

dummy:



configure:  config/configure.in config/configure.header
	@$(ECHO) "Creating new ./configure from config/configure.in"
	@autoconf config/configure.in > configure.tmp
	@cat configure.tmp|sed "2r config/configure.header" >configure
	@-rm configure.tmp
	@chmod 755 configure

