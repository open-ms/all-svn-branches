// -*- mode: C++; tab-width: 2; -*-
// vi: set ts=2:
//
// --------------------------------------------------------------------------
//                   OpenMS Mass Spectrometry Framework
// --------------------------------------------------------------------------
//  Copyright (C) 2003-2011 -- Oliver Kohlbacher, Knut Reinert
//
//  This library is free software; you can redistribute it and/or
//  modify it under the terms of the GNU Lesser General Public
//  License as published by the Free Software Foundation; either
//  version 2.1 of the License, or (at your option) any later version.
//
//  This library is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
//  Lesser General Public License for more details.
//
//  You should have received a copy of the GNU Lesser General Public
//  License along with this library; if not, write to the Free Software
//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
//
// --------------------------------------------------------------------------
// $Maintainer:  $
// $Authors: Marc Sturm $
// --------------------------------------------------------------------------


//##############################################################################

/**
	@page TOPPView_baseline_reduction Substracting a baseline from a spectrum
	
	First we load the spectrum to be analyzed in TOPPView. If you want to
	test the described tools, you can open the tutorial data via the File-menu
	(@a File > @a Open @a example @a file, then select @a peakpicker_tutorial_1.mzML).
	The BaselineFilter can be called via the Tools-menu
	(@a Tools > @a Apply @a TOPP @a tool), then select BaselineFilter as TOPPtool (red rectangle).
	One can choose between different types of filters (green rectangle),
	the one mainly used is TopHat. The other important parameter is the
	length of the structuring element (blue rectangle). The default value is 3 Thomson.
	Press OK to start the baseline subtraction.

	@image html TOPPView_tools_baseline.png 
	@image latex TOPPView_tools_baseline.png "" width=14cm

	The following image shows a part of the spectrum after baseline filtering as green line,
	the original raw data is shown by the blue line.
	
	@image html TOPPView_tools_baseline_filtered.png
	@image latex TOPPView_tools_baseline_filtered.png "" width=14cm
	
*/

//##############################################################################

/**	
	@page TOPPView_smoothing Smoothing raw data	
	
	To smooth your raw data call the NoiseFilter via the Tools-menu,
	(@a Tools > @a Apply @a TOPP @a tool), then select NoiseFilter as TOPPtool (green rectangle).
	Afterwards select the NoiseFilter type (red rectangle). You can choose between Savitzky-Golay and
	Gaussian. The parameters for the filter type can be adapted (blue rectangle).
	For the Savitzky-Golay filter you can set the frame length and the order of the polynomial that is fitted.
	For the Gaussian filter the gaussian width and the ppm tolerance for a flexible gaussian width
	depending on the m/z value can be adapted. Press Ok to run the NoiseFilter.
	
	@image html TOPPView_tools_noisefilter.png 
	@image latex TOPPView_tools_noisefilter.png "" width=14cm

	The following image shows a part of the spectrum after smoothing as red line with the unsmoothed
	data in green.
		
	@image html TOPPView_tools_noisefilter_filtered.png
	@image latex TOPPView_tools_noisefilter_filtered.png "" width=14cm
	
*/

//##############################################################################

/**	
	@page TOPPView_peakpicking Picking peaks 

	If you have low resolution data you may consider to smooth your data first(@ref TOPPView_smoothing) and subtract
	the baseline (@ref TOPPView_baseline_reduction) before peak picking.

	We have two types of PeakPickers, the Wavelet-PeakPicker and one especially suited for
	high resolution data (select type high_res). In this tutorial we consider the Wavelet-PeakPicker.
	We use the file @a peakpicker_tutorial_2.mzML from the examples data (@a File > @a Open @a example @a data).


	The main parameters are the peak width and the minimal signal to noise ratio for a peak to be picked.
	If you don't know the approximate fwhm of your peaks you can use the estimation included in the PeakPicker.
	Here you need to set the flag estimate_peak_width to true.
	After applying the PeakPicker you can see which peak width was estimated and used for peak picking in the log window.
	
	If you want to estimate the peak width on your own, you may use the measuring tool (@ref TOPPView_views_use)
	to determine the fwhm of one or several representative peaks.
	
	If the peak picker delivers only a few peaks even though the the peak_with and signal_to_noise parameters are
	set to good values, you may consider changing the advanced parameter fwhm_lower_bound_factor to a lower value.
	All peaks with a lower fwhm than fwhm_lower_bound_factor * peak_width are discarded.

	The following image shows a part of the spectrum with the picked peaks shown in green,
	the estimated peak width in the log window and the measured peak width.

	@image html TOPPView_tools_pp_picked.png
	@image latex TOPPView_tools_pp_picked.png "" width=14cm

*/

//##############################################################################

/**	
	@page TOPPView_feature_detection_centroided Feature detection on centroided data 

	To quantify peptide features, TOPP offers the @b FeatureFinder tool. In this section the @b centroided algorithm is
	used, which works on centroided data only. There are other FeatureFinder algorithms for profile data.
	
	For this example the file @a LCMS-centroided.mzML from the examples data is used (@a File > @a Open @a example @a data).
	In order to adapt the algorithm to our data, some parameters have to be set.
	
	@b Intensity
	@n The algorithm estimates the significance of peak intensities in a local environment. Therefore, the HPLC-MS map is
	divided into n times n regions. Set the @a intensity:bins parameter to 10 if you are working on a whole map. If you are 
	working on a small region only, you should set it to 1.
	
	@b Mass @b trace
	@n For the mass traces, you have to define the number of adjacent spectra in which a mass has to occur (@a mass_trace:min_spectra).
	In oder to compensate for peak picking errors, missing peaks can be allowed (@a mass_trace:max_missing) and a tolerated mass deviation
	must be set (@a mass_trace:mz_tolerance).
	
	@b Isotope @b pattern
	@n The expected isotopic intensity pattern is estimated from an averagene amino acid composition.
	The algorithm searches all charge states in a defined range (@a isotopic_pattern:change_min to @a isotopic_pattern:change_max).
	Just as for mass traces, a tolerated mass deviation between isotopic peaks has to be set (@a isotopic_pattern:mz_tolerance).
	
	The image shows the centroided peak data and the found peptide features. The used parameters can be found in the TOPP tools dialog.
	
	@image html TOPPView_tools_ff_centroided.png
	@image latex TOPPView_tools_ff_centroided.png "" width=14cm


*/

