// -*- Mode: C++; tab-width: 2; -*-
// vi: set ts=2:
//
// --------------------------------------------------------------------------
//                   OpenMS Mass Spectrometry Framework
// --------------------------------------------------------------------------
//  Copyright (C) 2003-2007 -- Oliver Kohlbacher, Knut Reinert
//
//  This library is free software; you can redistribute it and/or
//  modify it under the terms of the GNU Lesser General Public
//  License as published by the Free Software Foundation; either
//  version 2.1 of the License, or (at your option) any later version.
//
//  This library is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
//  Lesser General Public License for more details.
//
//  You should have received a copy of the GNU Lesser General Public
//  License along with this library; if not, write to the Free Software
//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
//
// --------------------------------------------------------------------------
// $Maintainer: Marc Sturm $
// --------------------------------------------------------------------------

/**
	@defgroup Visual Visual

	@brief Visualization classes
*/

/**
	@defgroup spectrum_widgets Spectrum visualizaion widgets
	
	@brief Spectrum visualization widgets
	
	The spectrum widgets allow spectrum data to be visualized
	in different manners. There are predefined widgets for
	1D and 2D visualization. For each type of view, at least
	two new classes must be defined:
	
	- a "canvas" class derived from OpenMS::SpectrumCanvas,
	  used for painting the data.
	- a "widget" class derived from OpenMS::SpectrumWidget,
	  which holds the instance of the canvas class, and some
	  additional widgets, such as OpenMS::AxisWidget. This
	  class is also responsible for holding the data and for
	  providing it to the canvas class instance.
	- for integration into the TOPPView application, there
	  must be another "window" class derived from
	  OpenMS::SpectrumWindow, which serves as a container for
	  the "widget" class and integrates into the MDI concept
	  used by the TOPPView application.
	
	The predefined classes for 1D-views are: Spectrum1DCanvas,
	Spectrum1DWidget and Spectrum1DWindow. The classes for
	2D-views are: Spectrum2DCanvas, Spectrum2DWidget and
	Spectrum2DWindow.
	
	For the most common operations, the window class provides
	wrapper methods which forward to the widget or canvas
	class. Also, there might be wrappers in the widget class
	which forward to the canvas class.
	
	The canvas, widget and window classes are designed that
	instances of the classes can work together. In particular,
	an instance of a widget class needs the presence of an
	instance of the canvas class, but not the other way around:
	
	@code
	                 needs                  needs
	                ------>                ------>
	 SpectrumWindow         SpectrumWidget         SpectrumCanvas
	                <------                <------
	              doesn't need           doesn't need
	@endcode
	
	Here, "doesn't need" means that if no instance is present
	the widget will still work, but if it is present, it can
	be used.
	
	This design allows more complex interconnected views, such
	as a window widget containing more than one spectrum widgets
	or spectrum widgets of different kinds.
	
	@ingroup Visual
*/