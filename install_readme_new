
Allgemein:
- CMake muss man erneut ausführen wenn man eine Quelldatei hinzufügt
	--> sollte er allein mitbekommen, wenn man make aufruft (zu testen)
- niemals "\" in Pfadangaben innerhalb CmakeLists.txt benutzen! Cmake will Unix-style Pfade!


für alle neuen Klassen (auch für Template Spezialisierungen, jedoch nicht für reine Template Klassen)
hinter class das Macro OPENMS_DLLAPI einfügen.
e.g. aus
class Myclass {
wird
class OPENMS_DLLAPI Myclass {


TODO:
- check Types.h. preprocessor macros!
- TOPPtests portieren!
- set svn:eol to native for all .c and .h files!


- done: update boost to 1.37
- contrib/lib dir && Qt/lib in VC library path eintragen (wie geht das mit CMAKE automatisch?) Tools -> Options -> Projects -> VC++ Directories
- boost.lib wird benötigt... von CGAL... argghh
-- download bjam (see boost/index.html for install instructions)
bjam variant=debug threading=multi link=static
bjam variant=release threading=multi link=static (??)



generate_source_files.bash:
	- in source/FORMAT:
		### include ANDIFile only if set as option
		if (USE_ANDIMS)
		  list(APPEND sources ANDIFile.C)
		endif()
	- in source/FORMAT/HANDLERS
		same with AndiHandler.C
		
		
additional lib dirs:
C:\Qt\4.3.4_vs\lib;C:\Dokumente und Einstellungen\admin\Desktop\OpenMSretreat2008\contrib_vs\merged\lib

linker-input on MSVC:

opengl32.lib

xerces-depdom_2D.lib

xerces-c_2D.lib

svm.obj

libgslcblas.dll.a

libgsl.dll.a

cgal-vc80-mt.lib

QtCore4.lib

QtGui4.lib

QtNetwork4.lib

QtOpenGL4.lib

QtSql4.lib

QtXml4.lib


CGAL:
-Windows installer enthält libs und VS80 project files
	- zum compilen von CGAL muss QTDIR als Env gesetzt sein

libsvm:
- enhält NMake file --> erzeugt svm.obj --> nach contrib/lib kopieren
command (im libsvm dir ausführen):nmake -f Makefile.win clean all
-- vorher #define INF (std::numeric_limits<double>::max())  in svm.cpp einfügen! (nur für release?)
	 extern "C" aus Header entfernt für Debug


GSL: beim compilen von OpenMS das Macro GSL_DLL setzen! libgsl.dll.a in libgsl.dll.lib umbenennen, same with libgslcblas

Qt:
- wenn Qt installiert wird muss qmake im Pfad sein, sonst findet CMake Qt nicht
 -ABER: wenn es mehrere QT-versionen gibt (eine mit MinGW, eine mit VS compiled)
 				 falls QTCore nicht gefunden wird: Cache editieren und auf VS-QT pfad setzen!! PATH env hat anscheinend keine Wirkung!
 				 speziell: QT_LIBRARY_DIR, QT_INCLUDE_DIR, QT_DOC_DIR

from command.exe:
"c:\Programme\CMake 2.6\bin\cmake.exe" -Wdev -D CUSTOM_CONTRIB_DIR:PATH="D:\uni\OpenMS_Win\my\contrib_vs\merged" -G "Visual Studio 8 2005" ../OpenMS_Retreat2008 

from command.exe:
"c:\Programme\CMake 2.6\bin\cmake.exe" -Wdev -D CUSTOM_CONTRIB_DIR:PATH="D:\uni\OpenMS_Win\my\contrib" -G "MSYS Makefiles" ../OpenMS_Retreat2008 



Windows:
- TortoiseSVN reicht nicht aus wenn SVN-Revision bestimmt werden soll!
--> download svn binaries (enthält svnversion.exe)


Qt für VS2005 compilen:
- visual studio command line öffnen
- ins Qt Verzeichnis gehen
- configure
- nmake
- lange warten

-get preprocessor macros of GCC:
$ touch empty.c
$ gcc -v -dD -E empty.c 